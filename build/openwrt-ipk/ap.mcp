#!/bin/sh /etc/rc.common
#
# Copyright 2020 Brightgate Inc.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#


START=60
STOP=70

USE_PROCD=1
PROG=/opt/com.brightgate/bin/ap.mcp

IDDIR=/data/mcp
SERIALFILE=${IDDIR}/serial
IDFILE=${IDDIR}/machine-id

set_hostname () {
	echo "$1" > /proc/sys/kernel/hostname
}

# Workaround for CVE-2019-11477 and CV-2019-11478.
cve_2019_tcp_sack () {
	echo 0 > /proc/sys/net/ipv4/tcp_sack
}

is_model100 () {
	fw_printenv -n bg_ext_serial | egrep -q "001-[0-9]{6}[A-Z]{2}-[0-9]{6}"
}

# MT7623 platforms.  Workaround for NETDEV WATCHDOG (T256).
mt7623_netdev_watchdog () {
	ethtool -s eth0 autoneg off
}

start_service()
{
	# Mount /data, if not already mounted.
	/bin/df -T /data | /usr/bin/tail -1 | /bin/grep -q f2fs
	if [ $? != 0 ]; then
		/usr/bin/mount /data
		/usr/bin/pkill -HUP rsyslogd
	fi

	# Machine ID handling.
	if [ ! -d ${IDDIR} ]; then
		/bin/mkdir -p ${IDDIR}
	fi

	if [ ! -f ${SERIALFILE} ]; then
		serial=`/usr/sbin/fw_printenv -n bg_ext_serial`
		if [ $? == 0 ]; then
			echo "Creating serial file with:" ${serial}
			echo ${serial} > ${SERIALFILE}
		fi
	fi

	if [ -f ${SERIALFILE} ]; then
		set_hostname "`cat < $SERIALFILE`"
	elif [ -f ${IDFILE} ]; then
		set_hostname "`cat < $IDFILE`"
	else
		set_hostname "unknown"
	fi

	cve_2019_tcp_sack
	if is_model100; then
		mt7623_netdev_watchdog
	fi


	# Start service via procd.
	procd_open_instance
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param env GODEBUG=madvdontneed=1
	procd_set_param command "${PROG}" ${OPTS}
	procd_set_param respawn
	procd_close_instance

	# Wait for chrony to synchronize the clock before everything gets to
	# start.  We try thirty times at one second intervals, waiting for the
	# clock to be synchronized to within a tenth of a second, ignoring any
	# skew.
	[ -e /var/run/chrony/chronyd.sock ] || sleep 1
	chronyc waitsync 30 .1 0 1
}

stop_service() {
	/bin/rm -f /tmp/mcp.online
}

